class Solution {
public:
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        
        //using topological sort

        vector<int>indeg(numCourses);
        vector<vector<int>>adjList(numCourses);

        for(auto pre:prerequisites){
            adjList[pre[1]].push_back(pre[0]);
            indeg[pre[0]]++;
        }

        queue<int>q;
        //we should push all nodes with 0 indegree in queue
        for(int i=0;i<numCourses;i++){
            if(indeg[i]==0){
                q.push(i);
            }
        }

        int totalNodesVisited=0;

        while(!q.empty()){
            int node=q.front();
            q.pop();

            totalNodesVisited++;

            for(auto it:adjList[node]){
                //delete 'node->it'
                indeg[it]--;
                if(indeg[it]==0){
                    q.push(it);
                }

            }

        }
     
     return totalNodesVisited==numCourses ? true:false;

    }
};
